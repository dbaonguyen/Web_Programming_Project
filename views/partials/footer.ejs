<footer>
  <div class="footer-main">
    <div class="footer-area footer-padding">
      <div class="container">
        <div class="row  justify-content-between">
          <div class="col-lg-4 col-md-6 col-sm-8">
            <div class="single-footer-caption mb-30">

              <div class="footer-logo">
                <a href="/"><img src="/img/logo/2.png" alt=""></a>
              </div>
              <div class="footer-tittle">
                <div class="footer-pera">
                  <p class="info1"><strong>RECESS CO., LTD
                    </strong></p>
                  <p class="info2">Floor 19, Saigon Centre Building - Tower 2, 67 Le Loi Street, Ben Nghe Ward, District
                    1, Ho Chi Minh City, Vietnam.</p>
                  <p class="info2">Business Registration Certificate: 0308808576</p>
                  <p class="info2 mt-3">
                    <a target="_blank" href="https://apps.apple.com/app/lazada-best-shopping-online/id785385147"
                      class="app-btn1"><img width="35%" src="/img/logo/app_btn1.png" alt=""></a>
                    <a target="_blank" href="https://play.google.com/store/apps/details?id=com.lazada.android"
                      class="app-btn2"><img width="35%" src="/img/logo/app_btn2.png" alt=""></a>
                  </p>
                </div>
              </div>
            </div>
          </div>
          <div class="col-lg-2 col-md-3 col-sm-4">
            <div class="single-footer-caption mb-50">
              <div class="footer-tittle">
                <h4>Lazada</h4>
                <ul>
                  <li><a href="https://group.lazada.com/en/about/?spm=a2o4n.home.footer_top.8.24303bdcxdygIC">About
                      us</a></li>
                  <li><a href="contact">Contact</a></li>
                  <li><a href="https://www.lazada.com/en/careers/">Recruit</a></li>
                  <li><a
                      href="https://group.lazada.com/en/press-release/?spm=a2o4n.home.footer_top.14.50983bdcyOWev9">Press</a>
                  </li>
                  <li><a
                      href="https://pages.lazada.vn/wow/gcp/route/lazada/vn/upr_1000345_lazada/channel/vn/upr-router/vn?hybrid=1&data_prefetch=true&prefetch_replace=1&at_iframe=1&wh_pid=/lazada/channel/vn/legal/quy-che-ban-hang&from=icms:offline">Operating</a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
          <div class="col-lg-3 col-md-3 col-sm-5">
            <div class="single-footer-caption mb-50">
              <div class="footer-tittle">
                <h4>More information</h4>
                <ul>
                  <li><a href="privacy">Privacy policy</a></li>
                  <li><a href="property">Property violations</a></li>
                  <li><a href="complain">Dispute resolution process</a></li>
                </ul>
              </div>
            </div>
          </div>
          <div class="col-lg-3 col-md-6 col-sm-7">
            <div class="single-footer-caption mb-50">
              <div class="footer-tittle">
                <h4>Customer service</h4>
                <div class="footer-pera footer-pera2">
                  <p style="line-height: 24px">Support time</p>
                  <p style="line-height: 24px">From <strong>09:00</strong> to <strong>18:00</strong> daily</p>
                  <p style="line-height: 24px">Hotline: 19006509
                  </p>
                </div>
                <!-- <div class="footer-form">
                            <div>
                                <form class="subscribe_form relative mail_par position-relative" name="sub-newsletter">
                                    <input required type="email" name="email" id="newsletter-form-email"
                                           placeholder=" Email address " class="hide-on-focus"
                                           onfocus="this.placeholder = ''"
                                           onblur="this.placeholder = ' Địa chỉ email '">
                                    <div class="form-icon">
                                        <button type="submit" name="submit" id="newsletter-submit"
                                                class="email_icon newsletter-submit button-contactForm"><img
                                                src="../public/img/logo/form_icon.png" alt=""></button>
                                    </div>
                                    <div class="mt-10 info position-absolute" id="result-newsletter"></div>
                                </form>

                                <script>
                                    const scriptURL = 'https://script.google.com/macros/s/AKfycbxjkiYJJ0sdSQfUp2CCEtY6vOaPR0R_7sYueS2xELNsf0edkare1Bx7lf23Xry6IRDB/exec'
                                    const form = document.forms['sub-newsletter']

                                    const alertPlaceholder = document.getElementById('result-newsletter')

                                    const alert = (message, type) => {
                                        alertPlaceholder.innerHTML = [
                                            `<div id="myAlertNewsletter" class="mb-0 alert alert-${type} alert-dismissible" role="alert">`,
                                            `   <div>${message}</div>`,
                                            '</div>'
                                        ].join('')
                                    }

                                    form.addEventListener('submit', e => {
                                        e.preventDefault()
                                        fetch(scriptURL, {method: 'POST', body: new FormData(form)})
                                            .then(() => {
                                                alert('Cám ơn bạn đã đăng ký!', 'success');
                                                $("#myAlertNewsletter").fadeTo(2000, 0).slideUp(1000, function () {
                                                    $("#myAlertNewsletter").alert('close');
                                                });
                                            })
                                            .catch(error => console.error('Error!', error.message))
                                    })
                                </script>
                            </div>
                        </div> -->
              </div>
            </div>
            <div>
              <!-- <form class="subscribe_form relative mail_par position-relative" name="sub-newsletter">
                <input required type="email" name="email" id="newsletter-form-email" placeholder=" Email address "
                  class="hide-on-focus" onfocus="this.placeholder = ''" onblur="this.placeholder = ' Địa chỉ email '">
                <div class="form-icon">
                  <button type="submit" name="submit" id="newsletter-submit"
                    class="email_icon newsletter-submit button-contactForm"><img src="../public/img/logo/form_icon.png"
                      alt=""></button>
                </div>
                <div class="mt-10 info position-absolute" id="result-newsletter"></div>
              </form> -->

              <script>
                const scriptURL = 'https://script.google.com/macros/s/AKfycbxjkiYJJ0sdSQfUp2CCEtY6vOaPR0R_7sYueS2xELNsf0edkare1Bx7lf23Xry6IRDB/exec'
                const form = document.forms['sub-newsletter']

                const alertPlaceholder = document.getElementById('result-newsletter')

                const alert = (message, type) => {
                  alertPlaceholder.innerHTML = [
                    `<div id="myAlertNewsletter" class="mb-0 alert alert-${type} alert-dismissible" role="alert">`,
                    `   <div>${message}</div>`,
                    '</div>'
                  ].join('')
                }

                form.addEventListener('submit', e => {
                  e.preventDefault()
                  fetch(scriptURL, { method: 'POST', body: new FormData(form) })
                    .then(() => {
                      alert('Cám ơn bạn đã đăng ký!', 'success');
                      $("#myAlertNewsletter").fadeTo(2000, 0).slideUp(1000, function () {
                        $("#myAlertNewsletter").alert('close');
                      });
                    })
                    .catch(error => console.error('Error!', error.message))
                })
              </script>
            </div>
          </div>
        </div>
      </div>
      <div class="col-xl-12 ">
        <div class="footer-copy-right">
          <!-- <p>
            Copyright &copy;
            <script data-cfasync="false" src="assets/js/email-decode.min.js"></script>
            <script>document.write(new Date().getFullYear());</script>
            All rights reserved
          </p> -->
        </div>
      </div>
    </div>
  </div>
  </div>

  </div>

</footer>
<script src="js/vendor/jquery-1.12.4.min.js"></script>
<script src="js/popper.js"></script>
<script src="js/cart.js"></script>
<script>
  function addToCart(event) {
    event.preventDefault();

    var productElement = event.target.closest(".product-wrapper");

    var productImage;
    var productName;
    var productPrice;

    // Check for the first HTML structure
    if (productElement.querySelector(".product-img-2")) {
      productImage = productElement.querySelector(".product-img-2 img").src;
      productName = productElement
        .querySelector(".product-content-2 h4 a")
        .textContent.trim();
      productPrice = productElement
        .querySelector(".product-content-2 span")
        .textContent.trim();
    }
    // Check for the second HTML structure
    else if (productElement.querySelector(".product-img")) {
      productImage = productElement.querySelector(".product-img img").src;
      productName = productElement
        .querySelector(".product-content h4 a")
        .textContent.trim();
      productPrice = productElement
        .querySelector(".product-content span")
        .textContent.trim();
    } else {
      // Neither structure recognized, so exit function
      return;
    }

    // Check if product already exists in cart
    var existingProduct = document.querySelector(
      `.cart-item[data-product-name="${productName}"]`
    );
    if (existingProduct) {
      // If product exists, simply return (in this simple cart we don't add duplicates)
      return;
    } else {
      // Clone the product template and fill in the product details
      var cartTable = document.querySelector(".showcart table");
      var newRow = document.querySelector(".cart-item-template").cloneNode(true);
      newRow.style.display = "";
      newRow.classList.remove("cart-item-template");
      newRow.classList.add("cart-item");
      newRow.dataset.productName = productName;

      newRow.querySelector(".product-thumbnail img").src = productImage;
      newRow.querySelector(".product-name a").textContent = productName;
      newRow.querySelector(".product-price-cart .amount").textContent = productPrice;

      // Append new product to cart table
      cartTable.appendChild(newRow);
    }

    // Update the cart count
    var cartCountElement = document.querySelector(".shop-count.book-count");
    var currentCount = parseInt(cartCountElement.textContent);
    currentCount += 1;
    cartCountElement.textContent = currentCount;
    document.querySelector(".empty-cart-message").style.display = "none";
    saveCartToLocalStorage();
    updateEmptyCartMessage();
    toggleRemoveAllButton();
  }

  function saveCartToLocalStorage() {
    var cartItems = document.querySelectorAll(
      ".cart-item:not(.cart-item-template)"
    );
    var cartData = [];
    cartItems.forEach((item) => {
      var product = {
        name: item.dataset.productName,
        image: item.querySelector(".product-thumbnail img").src,
        price: item.querySelector(".product-price-cart .amount").textContent,
        quantity: 1
      };
      cartData.push(product);
    });
    localStorage.setItem("cartData", JSON.stringify(cartData));
  }

  var cart = document.querySelector(".showcart");

  function showCart() {
    if (cart.style.display === "none" || cart.style.display === "") {
      cart.style.display = "block";
    }
  }

  function hideCart() {
    if (cart.style.display === "block") {
      cart.style.display = "none";
    }
  }

  function showMyCart() { }

  document.addEventListener("DOMContentLoaded", function () {
    var productsInCart = document.querySelectorAll(".cart-item");
    if (productsInCart.length === 0) {
      document.querySelector(".empty-cart-message").style.display = "";
    }
    loadCartFromLocalStorage();
  });

  function loadCartFromLocalStorage() {
    var cartData = JSON.parse(localStorage.getItem("cartData") || "[]");
    cartData.forEach((product) => {
      addProductToCart(product);
    });
    updateEmptyCartMessage();
  }

  function addProductToCart(product) {
    var cartTable = document.querySelector(".showcart table");
    var newRow = document.querySelector(".cart-item-template").cloneNode(true);
    newRow.style.display = "";
    newRow.classList.remove("cart-item-template");
    newRow.classList.add("cart-item");
    newRow.dataset.productName = product.name;

    newRow.querySelector(".product-thumbnail img").src = product.image;
    newRow.querySelector(".product-name a").textContent = product.name;
    newRow.querySelector(".product-price-cart .amount").textContent = product.price;
    // product.quantity = 2;

    cartTable.appendChild(newRow);

    var cartCountElement = document.querySelector(".shop-count.book-count");
    var currentCount = parseInt(cartCountElement.textContent);
    currentCount += 1;
    cartCountElement.textContent = currentCount;
  }

  function updateEmptyCartMessage() {
    var productsInCart = document.querySelectorAll(
      ".cart-item:not(.cart-item-template)"
    );
    if (productsInCart.length === 0) {
      document.querySelector(".empty-cart-message").style.display = "";
    } else {
      document.querySelector(".empty-cart-message").style.display = "none";
    }
    toggleRemoveAllButton();
  }

  document.addEventListener("click", function (e) {
    if (e.target && e.target.classList.contains("remove-product")) {
      var productRow = e.target.closest(".cart-item");
      productRow.remove();

      // Cập nhật số lượng sản phẩm và thông báo "No product here!"
      updateCartCount();
      updateEmptyCartMessage();
      saveCartToLocalStorage(); // Lưu trạng thái giỏ hàng sau khi xóa sản phẩm
    }
  });

  function updateCartCount() {
    var cartCountElement = document.querySelector(".shop-count.book-count");
    var currentCount = document.querySelectorAll(
      ".cart-item:not(.cart-item-template)"
    ).length;
    cartCountElement.textContent = currentCount;
  }

  document.addEventListener("click", function (e) {
    if (e.target && e.target.classList.contains("clear-cart")) {
      var cartItems = document.querySelectorAll(
        ".cart-item:not(.cart-item-template)"
      );
      cartItems.forEach((item) => {
        item.remove();
      });

      // Cập nhật số lượng sản phẩm và thông báo "No product here!"
      updateCartCount();
      updateEmptyCartMessage();
      saveCartToLocalStorage(); // Lưu trạng thái giỏ hàng sau khi xóa toàn bộ sản phẩm
    }
  });

  function toggleRemoveAllButton() {
    var productsInCart = document.querySelectorAll(
      ".cart-item:not(.cart-item-template)"
    );
    var removeAllButton = document.querySelector(".clear-cart");
    if (productsInCart.length === 0) {
      removeAllButton.style.display = "none";
    } else {
      removeAllButton.style.display = "block";
    }
  }

  function loadCartToTable() {
    // Get the cart data from Local Storage
    var cartData = JSON.parse(localStorage.getItem("cartData") || "[]");

    // Get the tbody element
    var tbody = document.querySelector(".table-content table tbody");

    // Clear any existing rows
    while (tbody.firstChild) {
      tbody.removeChild(tbody.firstChild);
    }

    // Populate the tbody with cart data
    cartData.forEach((product, index) => {
      var tr = document.createElement("tr");

      // Remove button column
      var removeTd = document.createElement("td");
      var removeButton = document.createElement("button");
      removeButton.textContent = "Remove";
      removeButton.classList.add("remove-product");
      removeButton.onclick = function () {
        tr.remove();
        removeFromLocalStorage(product.name);
        loadCartToTable();
      };
      removeTd.appendChild(removeButton);
      tr.appendChild(removeTd);

      // Image column
      var imageTd = document.createElement("td");
      var img = document.createElement("img");
      img.src = product.image;
      img.width = 85;
      img.height = 101;
      imageTd.appendChild(img);
      tr.appendChild(imageTd);

      // Product name column
      var nameTd = document.createElement("td");
      nameTd.textContent = product.name;
      tr.appendChild(nameTd);

      // Price column
      var priceTd = document.createElement("td");
      priceTd.textContent = product.price;
      tr.appendChild(priceTd);

      // Quantity column (assuming a default of 1 for simplicity)
      var qlt = product.quantity; // TODO: need update value to product.quality
      var quantityTd = document.createElement("td");
      var htmlQuantity = document.createElement('input');
      htmlQuantity.value = qlt;
      htmlQuantity.min = 1;
      htmlQuantity.name = "quantity";
      htmlQuantity.type = 'number';
      // quantityTd.textContent = "1"; // You might want to extend your cart data to include quantity
      htmlQuantity.addEventListener('keydown', function (e) {
        if (e.keyCode === 13) {
          e.preventDefault();
        }
      });

      quantityTd.appendChild(htmlQuantity);
      tr.appendChild(quantityTd);

      // Total column (assuming total = price * quantity)
      var totalTd = document.createElement("td");
      totalTd.textContent = parseFloat(product.price.replace("$", "")) * qlt;
      tr.appendChild(totalTd);

      htmlQuantity.addEventListener('change', function (e) {
        var valueNew = parseInt(e.target.value, 10);
        totalTd.textContent = (valueNew * parseFloat(product.price.replace("$", ""))).toFixed(2);

        // Cập nhật số lượng cho sản phẩm trong cartData
        var updatedProduct = cartData.find(item => item.name === product.name);
        if (updatedProduct) {
          updatedProduct.quantity = valueNew;
        }

        // Lưu cartData đã cập nhật vào localStorage
        localStorage.setItem("cartData", JSON.stringify(cartData));

        // Cập nhật giá trị subtotal và total
        updateCartTotals();
      });


      // Add the row to the tbody
      tbody.appendChild(tr);
      updateCartTotals();
    });
  }

  // Load cart data when the document is loaded
  document.addEventListener("DOMContentLoaded", function () {
    loadCartToTable();
  });

  function removeFromLocalStorage(productName) {
    var cartData = JSON.parse(localStorage.getItem("cartData") || "[]");
    var updatedCartData = cartData.filter(
      (product) => product.name !== productName
    );
    localStorage.setItem("cartData", JSON.stringify(updatedCartData));
  }

  function updateCartTotals() {
    var cartData = JSON.parse(localStorage.getItem("cartData") || "[]");
    var subtotal = 0;

    // Calculate subtotal
    cartData.forEach((product) => {
      var qlt = product.quantity;
      subtotal += parseFloat(product.price.replace("$", "")) * qlt;
    });

    // Get the current coupon code
    var couponCode = document.getElementById("coupon_code").value;

    var total;
    if (couponCode === "COUPON50") {
      total = subtotal * 0.5; // 50% discount
    } else {
      total = subtotal;
    }

    // Update on the page
    document.querySelector(
      ".cart-page-total ul li:nth-child(1) span"
    ).textContent = subtotal.toFixed(2);
    document.querySelector(
      ".cart-page-total ul li:nth-child(2) span"
    ).textContent = total.toFixed(2);
  }

  document.addEventListener("DOMContentLoaded", function () {
    loadCartToTable();
    // Event for Apply Coupon
    document
      .querySelector('input[name="apply_coupon"]')
      .addEventListener("click", function (e) {
        e.preventDefault();
        updateCartTotals();
      });

    // Event for Update Cart
    document
      .querySelector('input[name="update_cart"]')
      .addEventListener("click", function (e) {
        e.preventDefault();
        updateCartTotals();
      });
  });

  document.addEventListener("DOMContentLoaded", function () {
    // Event for Checkout
    document
      .querySelector(".cart-page-total a")
      .addEventListener("click", function (e) {
        e.preventDefault(); // Prevent default link action

        // Clear all products from the cart (cart page)
        var cartPageItems = document.querySelectorAll(
          ".table-content table tbody tr"
        );
        cartPageItems.forEach((item) => {
          item.remove();
        });

        // Clear all products from the mini cart
        var miniCartItems = document.querySelectorAll(
          ".cart-item:not(.cart-item-template)"
        );
        miniCartItems.forEach((item) => {
          item.remove();
        });

        // Update cart count and other relevant displays
        updateCartCount();
        updateEmptyCartMessage();

        // Clear the cart from local storage
        localStorage.removeItem("cartData");

        // Reset cart totals
        document.querySelector(
          ".cart-page-total ul li:nth-child(1) span"
        ).textContent = "0";
        document.querySelector(
          ".cart-page-total ul li:nth-child(2) span"
        ).textContent = "0";

        // Show the notification
        var notification = document.getElementById("notification");
        notification.classList.remove("hidden");

        // Hide the notification after 3 seconds (3000 milliseconds)
        setTimeout(function () {
          notification.classList.add("hidden");
        }, 3000);
      });
  });

  var addToCartButtons = document.querySelectorAll(
    ".product-action .animate-top"
  );
  addToCartButtons.forEach(function (button) {
    button.addEventListener("click", addToCart);
  });

  // Add this code to your frontend JavaScript
  function saveCartData() {
    // Retrieve cart data from localStorage
    var cartDataString = localStorage.getItem("cartData");

    // Check if cart data exists
    if (cartDataString) {
      // Make a POST request to your server
      fetch("/checkout", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ cartData: cartDataString }),
      })
        .then((response) => response.json())
        .then((data) => {
          // Handle the response from the server, e.g., display a success message
          console.log("Order created:", data);
          // You can perform any additional actions here as needed
        })
        .catch((error) => {
          // Handle errors, e.g., display an error message
          console.error("Error creating order:", error);
        });
    }
  }

</script>

<script src="js/bootstrap.min.js"></script>
<script src="js/jquery.magnific-popup.min.js"></script>
<script src="js/isotope.pkgd.min.js"></script>
<script src="js/imagesloaded.pkgd.min.js"></script>
<script src="js/jquery.counterup.min.js"></script>
<script src="js/waypoints.min.js"></script>
<script src="js/ajax-mail.js"></script>
<script src="js/owl.carousel.min.js"></script>
<script src="js/plugins.js"></script>
<script src="js/main.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"
  integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g=="
  crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</body>

</html>